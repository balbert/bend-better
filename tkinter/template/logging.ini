# logger.ini

# https://docs.python.org/3/library/logging.config.html

# These are the loggers that are available from the code
# Each logger requires a handler, but can have more than one
[loggers]
keys=root, client

# Each handler requires a single formatter
[handlers]
keys=console, file

[formatters]
keys=console, file

[logger_root]
level=DEBUG
handlers=file

[logger_client]
level=DEBUG
handlers=console, file
qualname=client
# propagate=0 prevents message passing to ancestor loggers, e.g. root
propagate=0

[handler_console]
class=StreamHandler
level=DEBUG
formatter=console
args=(sys.stdout,) # comma is correct, the parser is looking for args

[handler_file]
class=FileHandler
level=DEBUG
formatter=file

# Change time.strftime("%%Y-%%m-%%d_%%H:%%M:%%S") to time.strftime("%%Y-%%m-%%d")
#   to only create one log per day (unique filename).
args=("logs/dummy_" + time.strftime("%%Y-%%m-%%d_%%H:%%M:%%S") + '.log', 'a')

# With this form, messages will be appended to the file.
# args=('<file-name>', 'a')
#
# With this form, the log file will be recreated before appending messages.
# args=('<file-name>', 'w')

# A separate formatter for the console
[formatter_console]
format=%(asctime)s | %(levelname)-8s | %(filename)s-%(funcName)s-%(lineno)04d | %(message)s

# Formatter for the file
[formatter_file]
# name is the name of the logger root or client
# levelname is the log message level debug, warn, etc...
# lineno is the line number from where the call to log is made
# 04d will ensure there are four numeric places with leading zeros
#  4s will pad the string with leading spaces, right justify
# -4s will pad the string with trailing spaces, left justify
# filename is the file name from where the call to log is made
# funcName is the method name from where the call to log is made
#
# format=%(asctime)s | %(lineno)d | %(message)s
# format=%(asctime)s | %(levelname)-8s | %(lineno)04d | %(message)s
# format=%(asctime)s | %(name)s | %(levelname)s | %(message)s
# format=%(asctime)s | %(name)s | %(module)s-%(lineno) | %(levelname)s | %(message)s
# format=%(asctime)s | %(name)s | %(module)s-%(lineno)04d | %(levelname)s | %(message)s
# format=%(asctime)s | %(name)s | %(module)s-%(lineno)4s | %(levelname)-8s | %(message)s
format=%(asctime)s | %(levelname)-8s | %(filename)s-%(funcName)s-%(lineno)04d | %(message)s


